<div id="example-to-do"></div>

<script>
  import { $, type Ref } from '../../lib/dom';

  type ToDoType = { title: string };

  // Global state
  const search = $.createState('');
  const searchElement = $('input', {
    placeholder: 'Search on both...',
    className: 'p-2 rounded w-full',
    onInput: (e) => search.set((e.target as HTMLInputElement).value.toLowerCase()),
  });

  const ToDo = (props: { heading: string; initialToDos: ToDoType[] }) => {
    // Local state
    const todos = $.createState(props.initialToDos);

    return $('div', { className: 'flex-1 flex flex-col' }, [
      $('h3', { className: 'text-lg font-bold' }, [props.heading, "'s To-Do:"]),
      $(
        'ul',
        {
          className: 'space-y-1 pb-3 pt-1 flex-1',
          ref: [todos.ref, search.ref], // ðŸ‘ˆ Re-render when todos or search changed
        },
        () => {
          return todos.current.map((todo) => {
            if (!todo.title.toLowerCase().includes(search.current)) return null;
            return $('li', {}, [
              $('div', { className: 'flex gap-1.5' }, [
                $('button', {
                  className: 'px-2 bg-rose-300 rounded',
                  textContent: 'x',
                  onClick: () => todos.set((prev) => prev.filter((item) => item !== todo)),
                }),
                $('div', {}, todo.title),
              ]),
            ]);
          });
        }
      ),
      AddToDo((newTodo) => todos.set((prev) => [...prev, newTodo])),
    ]);
  };

  const AddToDo = (onSubmit: (newTodo: ToDoType) => void) => {
    const ref = {} as Ref<HTMLInputElement>;

    return $(
      'form',
      {
        className: 'bg-orange-300 p-1.5 rounded space-y-1.5 *:w-full *:rounded *:px-2.5 *:py-1',
        onSubmit: (e) => {
          e.preventDefault();
          if (!ref.element.value) {
            ref.element.focus();
            return;
          }
          onSubmit({ title: ref.element.value });
          (e.target as HTMLFormElement).reset();
          if (searchElement.value) {
            search.set('');
            searchElement.value = '';
          }
        },
      },
      [
        $('input', { ref, placeholder: 'Input title...', className: 'p-2 rounded', maxLength: 32 }),
        $('button', { className: 'px-2 bg-emerald-200 rounded' }, ['Add']),
      ]
    );
  };

  $(
    document.querySelector('#example-to-do')! as HTMLDivElement,
    { className: 'p-2 bg-yellow-300 rounded' },
    [
      searchElement,
      $('div', { className: 'flex gap-2 pt-3 items-stretch' }, [
        ToDo({
          heading: 'Foo',
          initialToDos: [
            { title: 'Buy milk' },
            { title: 'Buy tomato' },
            { title: 'Shear sheep' },
            { title: 'Catch fish' },
          ],
        }),
        ToDo({
          heading: 'Bar',
          initialToDos: [{ title: 'Eat tomato' }, { title: 'Buy chocolate' }],
        }),
      ]),
    ]
  );
</script>
